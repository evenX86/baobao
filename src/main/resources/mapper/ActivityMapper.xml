<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.alexura.baobao.mapper.ActivityMapper" >
    <resultMap id="BaseResultMap" type="com.alexura.baobao.entity.ActivityEntity" >
        <result property = "id"  column = "id" jdbcType="INTEGER"/>
        <result property = "groupName"  column = "group_name" jdbcType="VARCHAR"/>
        <result property = "actAddr"  column = "act_addr" jdbcType="VARCHAR"/>
        <result property = "actDate"  column = "act_date" jdbcType="VARCHAR"/>
        <result property = "actPeopleNum"  column = "act_people_num" jdbcType="VARCHAR"/>
        <result property = "actUserTel"  column = "act_user_tel" jdbcType="VARCHAR"/>
        <result property = "actUser"  column = "act_user" jdbcType="VARCHAR"/>
        <result property = "desc"  column = "desc" jdbcType="VARCHAR"/>
        <result property = "introduce"  column = "introduce" jdbcType="VARCHAR"/>
        <result property = "community"  column = "community" jdbcType="VARCHAR"/>
        <result property = "project"  column = "project" jdbcType="VARCHAR"/>
        <result property = "actImg1"  column = "act_img1" jdbcType="VARCHAR"/>
        <result property = "actImg2"  column = "act_img2" jdbcType="VARCHAR"/>
        <result property = "actImg3"  column = "act_img3" jdbcType="VARCHAR"/>
        <result property = "actImg4"  column = "act_img4" jdbcType="VARCHAR"/>
        <result property = "created"  column = "created" jdbcType="VARCHAR"/>
        <result property = "modified"  column = "modified" jdbcType="VARCHAR"/>

    </resultMap>

    <sql id="Base_Column_List" >
      id, `group_name`,act_addr,act_date,act_people_num,act_user_tel,act_user,project,community,introduce,`desc`,act_img1,act_img2,act_img3,act_img4,created,modified
    </sql>

    <sql id="Pre_Column_List" >
      id,`group_name`,act_date,creator as act_user,act_pre_title as introduce,act_addr,created
    </sql>

    <select id="queryGroupNum" resultType="map">
        SELECT count(*) as cnt,group_name from alex_activity where status=1 group by group_name order by cnt desc
    </select>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM alex_activity
        WHERE status=1
        ORDER BY id DESC
    </select>

    <select id="getAllByGroup" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List" />
        FROM alex_activity
        WHERE status=1
        AND group_name = #{groupName}
        ORDER BY id DESC
    </select>

    <select id="queryActList" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List" />
        FROM alex_activity
        WHERE status=1
        <if test="search != null">
            AND group_name like #{search}
        </if>
        <if test="comm != null">
            AND community like #{comm}
        </if>
        <if test="st != null">
            AND act_date >= #{st}
        </if>
        <if test="et != null">
            <![CDATA[ AND act_date <=#{et} ]]>
        </if>
        ORDER BY id DESC
    </select>

    <select id="getActById" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Base_Column_List" />
        FROM alex_activity
        WHERE
        id=#{actId}
    </select>


    <select id="getPreActById" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Pre_Column_List" />
        FROM alex_activity_pre
        WHERE
        id=#{actId}
    </select>


    <select id="listPreActivity" resultMap="BaseResultMap" parameterType="map">
        SELECT
        <include refid="Pre_Column_List" />
        FROM alex_activity_pre
        WHERE
        status = 1
        AND
        act_date >= now()
    </select>


    <select id="countAll" resultType="java.lang.Long" >
       SELECT count(*) from alex_activity where status=1
    </select>

    <select id="getCommunityList" resultType="java.lang.String" >
       SELECT distinct community from alex_activity where status=1
    </select>

    <select id="countAllGroup" resultType="java.lang.Long" >
       SELECT count(DISTINCT group_name) from alex_user WHERE status=1
    </select>

    <insert id="insert" parameterType="com.alexura.baobao.entity.ActivityEntity" >
        INSERT INTO alex_activity
        (`group_name`,act_addr,act_date,act_people_num,act_user_tel,act_user,`desc`,`introduce`,`community`,`project`,act_img1,act_img2,act_img3,act_img4,created,modified)
        VALUES(#{groupName}, #{actAddr},#{actDate},#{actPeopleNum},#{actUserTel},#{actUser},#{desc},#{introduce},#{community},#{project},#{actImg1},#{actImg2},#{actImg3},#{actImg4}, now(),now())
    </insert>

    <insert id="insertPreActInfo" parameterType="com.alexura.baobao.entity.ActivityEntity" >
        INSERT INTO alex_activity_pre
        (`group_name`,act_date,`act_pre_title`,`act_addr`,creator,created)
        VALUES(#{groupName},#{actDate},#{introduce},#{actAddr},#{actUser},now())
    </insert>

    <update id="update" parameterType="com.alexura.baobao.entity.ActivityEntity" >
        UPDATE
        alex_activity
        SET
        <if test="actAddr != null">act_addr = #{actAddr},</if>
        <if test="actDate != null">act_date = #{actDate},</if>
        <if test="actPeopleNum != null">act_people_num = #{actPeopleNum},</if>
        <if test="community != null">community = #{community},</if>
        <if test="project != null">project = #{project},</if>
        <if test="introduce != null">introduce = #{introduce},</if>
        <if test="actUser != null">act_user = #{actUser},</if>
        <if test="actUserTel != null">act_user_tel = #{actUserTel},</if>
        <if test="actImg1 != null">`act_img1` = #{actImg1},</if>
        <if test="actImg2 != null">`act_img2` = #{actImg2},</if>
        <if test="actImg3 != null">`act_img3` = #{actImg3},</if>
        <if test="actImg4 != null">`act_img4` = #{actImg4},</if>
        <if test="desc != null">`desc` = #{desc},</if>
        modified = now()
        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long" >
        DELETE FROM
        alex_activity
        WHERE
        id =#{id}
    </delete>

    <update id="delActById" parameterType="map" >
        UPDATE
        alex_activity
        SET
        status=-1,
        modified = now()
        WHERE
        id = #{actId}
    </update>

    <update id="delPreActById" parameterType="map" >
        UPDATE
        alex_activity_pre
        SET
        status=-1,
        modified = now()
        WHERE
        id = #{actId}
    </update>
</mapper>
